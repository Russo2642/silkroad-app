basePath: /api
definitions:
  forms.ContactForm:
    properties:
      created_at:
        type: string
      email:
        maxLength: 100
        type: string
      id:
        type: integer
      name:
        maxLength: 100
        minLength: 2
        type: string
      phone:
        maxLength: 20
        minLength: 10
        type: string
      tour_id:
        type: integer
    required:
    - email
    - name
    - phone
    type: object
  forms.HelpWithTourForm:
    properties:
      country:
        maxLength: 100
        minLength: 2
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        maxLength: 100
        minLength: 2
        type: string
      phone:
        maxLength: 20
        minLength: 10
        type: string
      when_date:
        type: string
    required:
    - country
    - name
    - phone
    - when_date
    type: object
  http.errorResponse:
    properties:
      message:
        type: string
    type: object
  http.getAllToursResponse:
    properties:
      currentPage:
        type: integer
      itemsPerPage:
        type: integer
      totalItems:
        type: integer
      totalPages:
        type: integer
      tourPlaces:
        items:
          type: string
        type: array
      tours:
        items:
          $ref: '#/definitions/tour.Tour'
        type: array
    type: object
  tour.Difficulty:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - DifficultyEasy
    - DifficultyModerate
    - DifficultyHard
    - DifficultyVeryHard
    - DifficultyExtreme
  tour.Tour:
    type: object
  tour.TourPhoto:
    properties:
      alt_text:
        type: string
      created_at:
        type: string
      description:
        type: string
      display_order:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      photo_type:
        $ref: '#/definitions/tour.TourPhotoType'
      photo_url:
        type: string
      title:
        type: string
      tour_id:
        type: integer
      updated_at:
        type: string
    required:
    - photo_type
    - photo_url
    type: object
  tour.TourPhotoInput:
    properties:
      alt_text:
        type: string
      description:
        type: string
      display_order:
        type: integer
      photo_type:
        $ref: '#/definitions/tour.TourPhotoType'
      title:
        type: string
      tour_id:
        type: integer
    required:
    - photo_type
    - tour_id
    type: object
  tour.TourPhotoType:
    enum:
    - preview
    - gallery
    - route
    - booking
    type: string
    x-enum-varnames:
    - PhotoTypePreview
    - PhotoTypeGallery
    - PhotoTypeRoute
    - PhotoTypeBooking
  tour.TourPhotosGrouped:
    properties:
      booking:
        items:
          $ref: '#/definitions/tour.TourPhoto'
        type: array
      gallery:
        items:
          $ref: '#/definitions/tour.TourPhoto'
        type: array
      preview:
        items:
          $ref: '#/definitions/tour.TourPhoto'
        type: array
      route:
        items:
          $ref: '#/definitions/tour.TourPhoto'
        type: array
    type: object
  tour.TourStatus:
    enum:
    - active
    - inactive
    - archived
    type: string
    x-enum-varnames:
    - StatusActive
    - StatusInactive
    - StatusArchived
  tour.TourType:
    enum:
    - Однодневный тур
    - Многодневный тур
    - Сити-тур
    - Эксклюзивный тур
    - Инфо-тур
    - Авторский тур
    type: string
    x-enum-varnames:
    - OneDayTour
    - MultiDayTour
    - CityTour
    - ExclusiveTour
    - InfoTour
    - AuthorsTour
info:
  contact: {}
  title: SilkRoad App API
  version: "1.0"
paths:
  /countries:
    get:
      consumes:
      - application/json
      description: Get list of countries with optional filtering
      parameters:
      - description: Filter by active status
        in: query
        name: is_active
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.errorResponse'
      summary: Get countries
      tags:
      - countries
  /form/contact_form:
    post:
      consumes:
      - application/json
      description: This method creates a new contact form and sends tour title if
        TourID is provided
      parameters:
      - description: Contact form data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/forms.ContactForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.errorResponse'
      summary: Create a contact form
      tags:
      - forms
  /form/help_with_tour_form:
    post:
      consumes:
      - application/json
      description: This method creates a new helpWithTour form with name, phone, country
        and when_date
      parameters:
      - description: helpWithTour form data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/forms.HelpWithTourForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.errorResponse'
      summary: Create a help with tour form
      tags:
      - forms
  /photos:
    get:
      consumes:
      - application/json
      description: Get photos with filtering and pagination
      parameters:
      - description: Tour ID
        in: query
        name: tour_id
        type: integer
      - description: Photo type
        enum:
        - preview
        - gallery
        - route
        - booking
        in: query
        name: photo_type
        type: string
      - description: Is active
        in: query
        name: is_active
        type: boolean
      - default: 50
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'photos: array of photos, total: total count'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: Bad Request, message: Invalid parameters'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: Internal Server Error, message: Error message'
          schema:
            additionalProperties: true
            type: object
      summary: Get photos by filter
      tags:
      - photos
  /photos/{photoID}:
    delete:
      consumes:
      - application/json
      description: Delete photo (soft delete)
      parameters:
      - description: Photo ID
        in: path
        name: photoID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'status: success, message: Photo deleted successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: Bad Request, message: Invalid photoID'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: Internal Server Error, message: Error message'
          schema:
            additionalProperties: true
            type: object
      summary: Delete tour photo
      tags:
      - photos
    put:
      consumes:
      - application/json
      description: Update photo metadata
      parameters:
      - description: Photo ID
        in: path
        name: photoID
        required: true
        type: integer
      - description: Photo update data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/tour.TourPhotoInput'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: success, message: Photo updated successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: Bad Request, message: Invalid parameters'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: Internal Server Error, message: Error message'
          schema:
            additionalProperties: true
            type: object
      summary: Update tour photo
      tags:
      - photos
  /tours:
    get:
      consumes:
      - application/json
      description: Получение списка туров с возможностью фильтрации по местоположению,
        количеству участников, цене, продолжительности, популярности и другим параметрам
      parameters:
      - description: Tour place (country)
        in: query
        name: tour_place
        type: string
      - collectionFormat: csv
        description: Number of participants (array of integers) - filters tours that
          can accommodate the specified number of people
        in: query
        items:
          type: integer
        name: quantity
        type: array
      - collectionFormat: csv
        description: Tour type (array of strings)
        in: query
        items:
          type: string
        name: type
        type: array
      - collectionFormat: csv
        description: Difficulty level (array of integers from 1 to 5)
        in: query
        items:
          type: integer
        name: difficulty
        type: array
      - collectionFormat: csv
        description: Activities (array of strings)
        in: query
        items:
          type: string
        name: activities
        type: array
      - collectionFormat: csv
        description: Categories (array of strings)
        in: query
        items:
          type: string
        name: categories
        type: array
      - description: Minimum price
        in: query
        name: priceMin
        type: integer
      - description: Maximum price
        in: query
        name: priceMax
        type: integer
      - description: Duration in days
        in: query
        name: duration
        type: integer
      - description: Search by title and description
        in: query
        name: search
        type: string
      - default: 4
        description: Limit for pagination
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Filter by popular tours
        in: query
        name: popular
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getAllToursResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.errorResponse'
      tags:
      - tours
    post:
      consumes:
      - application/json
      description: This method creates a new tour with the given input data
      parameters:
      - description: Tour input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/tour.Tour'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.errorResponse'
        "422":
          description: Invalid Tour Type
          schema:
            $ref: '#/definitions/http.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.errorResponse'
      summary: Creates a new tour
      tags:
      - tours
  /tours/{id}:
    get:
      consumes:
      - application/json
      description: This method returns the details of a specific tour by its ID
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tour details
          schema:
            $ref: '#/definitions/tour.Tour'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.errorResponse'
      summary: Returns tour by ID
      tags:
      - tours
  /tours/{id}/photos:
    get:
      consumes:
      - application/json
      description: Get all photos for a specific tour grouped by type
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tour photos
          schema:
            $ref: '#/definitions/tour.TourPhotosGrouped'
        "400":
          description: 'status: Bad Request, message: Invalid tourID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 'status: Not Found, message: Tour not found'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: Internal Server Error, message: Error message'
          schema:
            additionalProperties: true
            type: object
      summary: Get photos for a tour
      tags:
      - tours
  /tours/{id}/photos/upload:
    post:
      consumes:
      - multipart/form-data
      description: Uploads multiple photos for a specific tour by tourID with advanced
        metadata support
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      - description: Type of photo (preview, gallery, route, booking)
        in: formData
        name: photoType
        required: true
        type: string
      - description: Photos to upload
        in: formData
        name: photos
        required: true
        type: file
      - description: Photo title
        in: formData
        name: title
        type: string
      - description: Photo description
        in: formData
        name: description
        type: string
      - description: Photo alt text
        in: formData
        name: alt_text
        type: string
      - description: Display order
        in: formData
        name: display_order
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'status: OK, message: Photos uploaded successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'status: Bad Request, message: Invalid parameters'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'status: Internal Server Error, message: Error message'
          schema:
            additionalProperties: true
            type: object
      summary: Upload photos for a tour (new version)
      tags:
      - tours
  /tours/prices:
    get:
      consumes:
      - application/json
      description: This method returns the minimum and maximum prices of all available
        tours
      produces:
      - application/json
      responses:
        "200":
          description: Min and Max tour prices
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.errorResponse'
      summary: Returns the minimum and maximum prices of all tours
      tags:
      - tours
  /tours/title/{slug}:
    get:
      consumes:
      - application/json
      description: This method returns the details of a specific tour based on its
        slug
      parameters:
      - description: Tour Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tour details
          schema:
            $ref: '#/definitions/tour.Tour'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.errorResponse'
      summary: Returns tour details by slug
      tags:
      - tours
swagger: "2.0"
