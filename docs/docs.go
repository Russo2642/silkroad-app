// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/countries": {
            "get": {
                "description": "Get list of countries with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "countries"
                ],
                "summary": "Get countries",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by active status",
                        "name": "is_active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/form/contact_form": {
            "post": {
                "description": "This method creates a new contact form and sends tour title if TourID is provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forms"
                ],
                "summary": "Create a contact form",
                "parameters": [
                    {
                        "description": "Contact form data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ContactForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/form/help_with_tour_form": {
            "post": {
                "description": "This method creates a new helpWithTour form with name, phone, country and when_date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forms"
                ],
                "summary": "Create a help with tour form",
                "parameters": [
                    {
                        "description": "helpWithTour form data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.HelpWithTourForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/photos": {
            "get": {
                "description": "Get photos with filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Get photos by filter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "tour_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "preview",
                            "gallery",
                            "route",
                            "booking"
                        ],
                        "type": "string",
                        "description": "Photo type",
                        "name": "photo_type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Is active",
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "photos: array of photos, total: total count",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "status: Bad Request, message: Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "status: Internal Server Error, message: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/photos/{photoID}": {
            "put": {
                "description": "Update photo metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Update tour photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "photoID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Photo update data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tour.TourPhotoInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success, message: Photo updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "status: Bad Request, message: Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "status: Internal Server Error, message: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete photo (soft delete)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Delete tour photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "photoID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success, message: Photo deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "status: Bad Request, message: Invalid photoID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "status: Internal Server Error, message: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tours": {
            "get": {
                "description": "Получение списка туров с возможностью фильтрации по местоположению, количеству участников, цене, продолжительности, популярности и другим параметрам",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tour place (country)",
                        "name": "tour_place",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Number of participants (array of integers) - filters tours that can accommodate the specified number of people",
                        "name": "quantity",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Tour type (array of strings)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Difficulty level (array of integers from 1 to 5)",
                        "name": "difficulty",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Activities (array of strings)",
                        "name": "activities",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Categories (array of strings)",
                        "name": "categories",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum price",
                        "name": "priceMin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum price",
                        "name": "priceMax",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Duration in days",
                        "name": "duration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by title and description",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 4,
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by popular tours",
                        "name": "popular",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.getAllToursResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "This method creates a new tour with the given input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Creates a new tour",
                "parameters": [
                    {
                        "description": "Tour input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tour.Tour"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid Tour Type",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/tours/prices": {
            "get": {
                "description": "This method returns the minimum and maximum prices of all available tours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Returns the minimum and maximum prices of all tours",
                "responses": {
                    "200": {
                        "description": "Min and Max tour prices",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/tours/title/{slug}": {
            "get": {
                "description": "This method returns the details of a specific tour based on its slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Returns tour details by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tour Slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tour details",
                        "schema": {
                            "$ref": "#/definitions/tour.Tour"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/tours/{id}": {
            "get": {
                "description": "This method returns the details of a specific tour by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Returns tour by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tour details",
                        "schema": {
                            "$ref": "#/definitions/tour.Tour"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/tours/{id}/photos": {
            "get": {
                "description": "Get all photos for a specific tour grouped by type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Get photos for a tour",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tour photos",
                        "schema": {
                            "$ref": "#/definitions/tour.TourPhotosGrouped"
                        }
                    },
                    "400": {
                        "description": "status: Bad Request, message: Invalid tourID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "status: Not Found, message: Tour not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "status: Internal Server Error, message: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tours/{id}/photos/upload": {
            "post": {
                "description": "Uploads multiple photos for a specific tour by tourID with advanced metadata support",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Upload photos for a tour (new version)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of photo (preview, gallery, route, booking)",
                        "name": "photoType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Photos to upload",
                        "name": "photos",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Photo title",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Photo description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Photo alt text",
                        "name": "alt_text",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Display order",
                        "name": "display_order",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: OK, message: Photos uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "status: Bad Request, message: Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "status: Internal Server Error, message: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "forms.ContactForm": {
            "type": "object",
            "required": [
                "email",
                "name",
                "phone"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "maxLength": 100
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 10
                },
                "tour_id": {
                    "type": "integer"
                }
            }
        },
        "forms.HelpWithTourForm": {
            "type": "object",
            "required": [
                "country",
                "name",
                "phone",
                "when_date"
            ],
            "properties": {
                "country": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 10
                },
                "when_date": {
                    "type": "string"
                }
            }
        },
        "http.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "http.getAllToursResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "itemsPerPage": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                },
                "tourPlaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tour.Tour"
                    }
                }
            }
        },
        "tour.Difficulty": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-varnames": [
                "DifficultyEasy",
                "DifficultyModerate",
                "DifficultyHard",
                "DifficultyVeryHard",
                "DifficultyExtreme"
            ]
        },
        "tour.Tour": {
            "type": "object"
        },
        "tour.TourPhoto": {
            "type": "object",
            "required": [
                "photo_type",
                "photo_url"
            ],
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "photo_type": {
                    "$ref": "#/definitions/tour.TourPhotoType"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tour_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "tour.TourPhotoInput": {
            "type": "object",
            "required": [
                "photo_type",
                "tour_id"
            ],
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer"
                },
                "photo_type": {
                    "$ref": "#/definitions/tour.TourPhotoType"
                },
                "title": {
                    "type": "string"
                },
                "tour_id": {
                    "type": "integer"
                }
            }
        },
        "tour.TourPhotoType": {
            "type": "string",
            "enum": [
                "preview",
                "gallery",
                "route",
                "booking"
            ],
            "x-enum-varnames": [
                "PhotoTypePreview",
                "PhotoTypeGallery",
                "PhotoTypeRoute",
                "PhotoTypeBooking"
            ]
        },
        "tour.TourPhotosGrouped": {
            "type": "object",
            "properties": {
                "booking": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tour.TourPhoto"
                    }
                },
                "gallery": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tour.TourPhoto"
                    }
                },
                "preview": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tour.TourPhoto"
                    }
                },
                "route": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tour.TourPhoto"
                    }
                }
            }
        },
        "tour.TourStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "archived"
            ],
            "x-enum-varnames": [
                "StatusActive",
                "StatusInactive",
                "StatusArchived"
            ]
        },
        "tour.TourType": {
            "type": "string",
            "enum": [
                "Однодневный тур",
                "Многодневный тур",
                "Сити-тур",
                "Эксклюзивный тур",
                "Инфо-тур",
                "Авторский тур"
            ],
            "x-enum-varnames": [
                "OneDayTour",
                "MultiDayTour",
                "CityTour",
                "ExclusiveTour",
                "InfoTour",
                "AuthorsTour"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "SilkRoad App API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
